public class AsliSudoku {

	public static boolean Correct(int x,int y, int[][] grid){
		String temp =" ";
		for(int i=0;i<9;i++){	
		    temp+=Integer.toString(grid[x][i]);
			temp+=Integer.toString(grid[i][y]);
			temp+=Integer.toString(grid[(x/3)*3+i/3][(y/3)*3+i%3]);
		 }
			
		
		int count=0,idx=0;
	// while(idx=temp.indexOf(Integer.toString(grid[x][y]),idx)!=-1){
			while ((idx=temp.indexOf(Integer.toString(grid[x][y]), idx))!=-1)	{ 
			count++;idx++;
		 
	 }
	 	return count==3;
	 }
	public static int[][] SolvePuzzle(int x,int y,int[][]grid){
		while(!Correct(8,8,grid)|| grid[8][8]==0){
			if(grid[x][y]<9){
			grid[x][y]++;
			if(Correct(x,y,grid)){
				int x1,y1;
				if(y==8){
					y1=0;
					x1=x+1;
				}else
						{x1=x;y1=y+1;
						}
					SolvePuzzle(x1,y1,grid);
				}
				}
			
			else{
				grid[x][y]=0;
			
		break;	}
			
		}
		
		return grid;
	
	}
		public static void print(int [][]grid){
			for(int i=0;i<9;i++){
				for(int j=0;j<9;j++){
					System.out.print(grid[i][j]);
				}
			System.out.println(" ");
			}
			
		}
	
	 
	 
	 
	 public static void main(String[] args) {
		
		  int [][] EmptyGrid= new int[][]{
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0}
		};
		// System.out.println(Correct(0,0,EmptyGrid));
	
			print(SolvePuzzle(0,0,EmptyGrid));
			
		}
		

	}
